#!/usr/bin/env python

__usage__ = 'condor-compute_horizon [--options] psd.txt.gz psd.txt.gz ...'
__description__ = "massive parallelizatoin of compute_horizon"
__author__ = "Reed Essick (reed.essick@ligo.org)"

#-------------------------------------------------

import os
import getpass

from distutils.spawn import find_executable

from optparse import OptionParser

### non-standard libraries
from exposure import utils

#-------------------------------------------------

parser = OptionParser(usage=__usage__, description=__description__)

parser.add_option("-v", "--verbose", default=False, action="store_true")

parser.add_option('', '--flow', default=32, type='float',
    help='DEFAULT=32')
parser.add_option('', '--fhigh', default=1024, type='float',
    help='DEFAULT=1024')

parser.add_option('', '--distance', default=100, type='float',
    help='an arbitrary choice for the distance scale used to calculate the SNR and estimate the horizon')
parser.add_option('', '--snr-thr', default=8, type='float',
    help='an arbitrary snr threshold defining what is detectable. Used to estimate the horizon')

parser.add_option('', '--universe', default='vanilla', type='string',
    help='DEFAULT=vanilla')
parser.add_option('', '--exe', default='compute_horizon', type='string',
    help='specify the explicit path to the executable. \
DEFAULT=compute_horizon')

parser.add_option('', '--accounting-group', default='ligo.dev.o1.burst.explore.test', type='string',
    help='DEFAULT=ligo.dev.o1.burst.explore.test')
parser.add_option('', '--accounting-group-user', default=getpass.getuser(), type='string',
    help='DEFAULT='+getpass.getuser())

parser.add_option('', '--retry', default=0, type='int',
    help='DEFAULT=0')

parser.add_option("-o", "--output-dir", default='.', type='string')
parser.add_option("-t", "--tag", default="", type='string')

parser.add_option('-s', '--condor-submit', default=False, action='store_true',
    help='submit the DAG to condor')

opts, args = parser.parse_args()

if opts.tag:
    filetag = "_"+opts.tag
else:
    filetag = ""

if not os.path.exists(opts.output_dir):
    os.makedirs(opts.output_dir)

#-------------------------------------------------

### write sub file
subname = "%s/compute_horizon%s.sub"%(opts.output_dir, filetag)
if opts.verbose:
    print( "writing : "+subname )
f = open(subname, 'w')
f.write(utils.compute_horizon_sub%{\
    'universe' : opts.universe,
    'exe' : os.path.abspath(find_executable(opts.exe)),
    'accounting_group' : opts.accounting_group,
    'accounting_group_user' : opts.accounting_group_user,
    'filetag' : filetag,
    'flow' : opts.flow,
    'fhigh' : opts.fhigh,
    'distance' : opts.distance,
    'snr_thr' : opts.snr_thr,
})
f.close()

### iterate over segments and define compute-psd jobs for each
dagname = subname.replace('.sub', '.dag')
if opts.verbose:
    print( "writing : "+dagname )
f = open(dagname, 'w')

for path in args:
    tag = os.path.basename(path).strip('.txt.gz')
    f.write(utils.compute_horizon_dag%{\
        'sub' : subname,
        'jobid' : tag, 
        'path' : path,
        'tag' : tag+opts.tag,
        'retry' : opts.retry,
        'outdir' : opts.output_dir,
    })
f.close()

#-------------------------------------------------

### submit
if opts.condor_submit:
    if opts.verbose:
        print( 'submitting : '+dagname )
    import subprocess as sp
    sp.Popen(['condor_submit_dag', dagname]).wait()

elif opts.verbose:
    print( 'you can now submit : '+dagname )
